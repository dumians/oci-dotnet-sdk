/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudguardService.Models
{
    /// <summary>
    /// Responder Activity summary Definition.
    /// </summary>
    public class ResponderActivitySummary 
    {
        
        /// <value>
        /// Unique id for Responder activity.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <value>
        /// problemId for which Responder activity is associated to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ProblemId is required.")]
        [JsonProperty(PropertyName = "problemId")]
        public string ProblemId { get; set; }

        /// <value>
        /// Id of the responder rule for the problem
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResponderRuleId is required.")]
        [JsonProperty(PropertyName = "responderRuleId")]
        public string ResponderRuleId { get; set; }

        /// <value>
        /// responder rule type for performing the operation
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResponderType is required.")]
        [JsonProperty(PropertyName = "responderType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ResponderType> ResponderType { get; set; }

        /// <value>
        /// responder rule name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResponderRuleName is required.")]
        [JsonProperty(PropertyName = "responderRuleName")]
        public string ResponderRuleName { get; set; }

        /// <value>
        /// Responder activity types
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResponderActivityType is required.")]
        [JsonProperty(PropertyName = "responderActivityType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ResponderActivityType> ResponderActivityType { get; set; }

        /// <value>
        /// the responder execution status
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResponderExecutionStatus is required.")]
        [JsonProperty(PropertyName = "responderExecutionStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ResponderExecutionStates> ResponderExecutionStatus { get; set; }

        /// <value>
        /// responder activity starting time
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }

        /// <value>
        /// additional message related to this operation
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Message is required.")]
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }
    }
}
