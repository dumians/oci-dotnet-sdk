/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ContainerengineService.Models
{
    /// <summary>
    /// The properties that define a request to create a node pool.
    /// </summary>
    public class CreateNodePoolDetails 
    {
        
        /// <value>
        /// The OCID of the compartment in which the node pool exists.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }

        /// <value>
        /// The OCID of the cluster to which this node pool is attached.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ClusterId is required.")]
        [JsonProperty(PropertyName = "clusterId")]
        public string ClusterId { get; set; }

        /// <value>
        /// The name of the node pool. Avoid entering confidential information.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <value>
        /// The version of Kubernetes to install on the nodes in the node pool.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KubernetesVersion is required.")]
        [JsonProperty(PropertyName = "kubernetesVersion")]
        public string KubernetesVersion { get; set; }

        /// <value>
        /// A list of key/value pairs to add to each underlying OCI instance in the node pool on launch.
        /// </value>
        [JsonProperty(PropertyName = "nodeMetadata")]
        public System.Collections.Generic.Dictionary<string, string> NodeMetadata { get; set; }

        /// <value>
        /// Deprecated. Use `nodeSourceDetails` instead.
        /// If you specify values for both, this value is ignored.
        /// The name of the image running on the nodes in the node pool.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "nodeImageName")]
        public string NodeImageName { get; set; }

        /// <value>
        /// Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "nodeSourceDetails")]
        public NodeSourceDetails NodeSourceDetails { get; set; }

        /// <value>
        /// The name of the node shape of the nodes in the node pool.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NodeShape is required.")]
        [JsonProperty(PropertyName = "nodeShape")]
        public string NodeShape { get; set; }

        /// <value>
        /// A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
        /// </value>
        [JsonProperty(PropertyName = "initialNodeLabels")]
        public System.Collections.Generic.List<KeyValue> InitialNodeLabels { get; set; }

        /// <value>
        /// The SSH public key on each node in the node pool on launch.
        /// </value>
        [JsonProperty(PropertyName = "sshPublicKey")]
        public string SshPublicKey { get; set; }

        /// <value>
        /// Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property.
        /// When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "quantityPerSubnet")]
        public System.Nullable<int> QuantityPerSubnet { get; set; }

        /// <value>
        /// The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet
        /// can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the
        /// subnetIds or nodeConfigDetails properties must be specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "subnetIds")]
        public System.Collections.Generic.List<string> SubnetIds { get; set; }

        /// <value>
        /// The configuration of nodes in the node pool. Exactly one of the
        /// subnetIds or nodeConfigDetails properties must be specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "nodeConfigDetails")]
        public CreateNodePoolNodeConfigDetails NodeConfigDetails { get; set; }
    }
}
