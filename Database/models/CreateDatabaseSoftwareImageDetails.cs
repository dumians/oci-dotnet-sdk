/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// Parameters for creating a database software image in the specified compartment.
    /// <br/>
    /// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
    /// 
    /// </summary>
    public class CreateDatabaseSoftwareImageDetails 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment the database software image  belongs in.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }

        /// <value>
        /// The database version with which the database software image is to be built.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseVersion is required.")]
        [JsonProperty(PropertyName = "databaseVersion")]
        public string DatabaseVersion { get; set; }

        /// <value>
        /// The user-friendly name for the database software image. The name does not have to be unique.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        ///
        /// <value>
        /// To what shape the image is meant for.
        /// </value>
        ///
        public enum ImageShapeFamilyEnum {
            [EnumMember(Value = "VM_BM_SHAPE")]
            VmBmShape,
            [EnumMember(Value = "EXADATA_SHAPE")]
            ExadataShape
        };

        /// <value>
        /// To what shape the image is meant for.
        /// </value>
        [JsonProperty(PropertyName = "imageShapeFamily")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ImageShapeFamilyEnum> ImageShapeFamily { get; set; }
        ///
        /// <value>
        /// List of the Fault Domains in which this DB system is provisioned.
        /// </value>
        ///
        public enum ImageTypeEnum {
            [EnumMember(Value = "GRID_IMAGE")]
            GridImage,
            [EnumMember(Value = "DATABASE_IMAGE")]
            DatabaseImage
        };

        /// <value>
        /// List of the Fault Domains in which this DB system is provisioned.
        /// </value>
        [JsonProperty(PropertyName = "imageType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ImageTypeEnum> ImageType { get; set; }

        /// <value>
        /// The PSU or PBP or Release Updates. To get a list of supported versions, use the {@link #listDbVersions(ListDbVersionsRequest) listDbVersions} operation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PatchSet is required.")]
        [JsonProperty(PropertyName = "patchSet")]
        public string PatchSet { get; set; }

        /// <value>
        /// List of one-off patches for Database Homes.
        /// </value>
        [JsonProperty(PropertyName = "databaseSoftwareImageOneOffPatches")]
        public System.Collections.Generic.List<string> DatabaseSoftwareImageOneOffPatches { get; set; }

        /// <value>
        /// output from lsinventory which will get passed as a string
        /// </value>
        [JsonProperty(PropertyName = "lsInventory")]
        public string LsInventory { get; set; }

        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }

        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
    }
}
