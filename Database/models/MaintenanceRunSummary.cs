/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// Details of a maintenance run.
    /// 
    /// </summary>
    public class MaintenanceRunSummary 
    {
        
        /// <value>
        /// The OCID of the maintenance run.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <value>
        /// The OCID of the compartment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }

        /// <value>
        /// The user-friendly name for the maintenance run.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <value>
        /// Description of the maintenance run.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        ///
        /// <value>
        /// The current state of the maintenance run.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "SCHEDULED")]
            Scheduled,
            [EnumMember(Value = "IN_PROGRESS")]
            InProgress,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "SKIPPED")]
            Skipped,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "UPDATING")]
            Updating,
            [EnumMember(Value = "DELETING")]
            Deleting,
            [EnumMember(Value = "DELETED")]
            Deleted
        };

        /// <value>
        /// The current state of the maintenance run.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }

        /// <value>
        /// Additional information about the current lifecycleState.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }

        /// <value>
        /// The date and time the maintenance run is scheduled to occur.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeScheduled is required.")]
        [JsonProperty(PropertyName = "timeScheduled")]
        public System.Nullable<System.DateTime> TimeScheduled { get; set; }

        /// <value>
        /// The date and time the maintenance run starts.
        /// </value>
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }

        /// <value>
        /// The date and time the maintenance run was completed.
        /// </value>
        [JsonProperty(PropertyName = "timeEnded")]
        public System.Nullable<System.DateTime> TimeEnded { get; set; }
        ///
        /// <value>
        /// The type of the target resource on which the maintenance run occurs.
        /// </value>
        ///
        public enum TargetResourceTypeEnum {
            [EnumMember(Value = "AUTONOMOUS_EXADATA_INFRASTRUCTURE")]
            AutonomousExadataInfrastructure,
            [EnumMember(Value = "AUTONOMOUS_CONTAINER_DATABASE")]
            AutonomousContainerDatabase,
            [EnumMember(Value = "EXADATA_DB_SYSTEM")]
            ExadataDbSystem
        };

        /// <value>
        /// The type of the target resource on which the maintenance run occurs.
        /// </value>
        [JsonProperty(PropertyName = "targetResourceType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TargetResourceTypeEnum> TargetResourceType { get; set; }

        /// <value>
        /// The ID of the target resource on which the maintenance run occurs.
        /// </value>
        [JsonProperty(PropertyName = "targetResourceId")]
        public string TargetResourceId { get; set; }
        ///
        /// <value>
        /// Maintenance type.
        /// </value>
        ///
        public enum MaintenanceTypeEnum {
            [EnumMember(Value = "PLANNED")]
            Planned,
            [EnumMember(Value = "UNPLANNED")]
            Unplanned
        };

        /// <value>
        /// Maintenance type.
        /// </value>
        [JsonProperty(PropertyName = "maintenanceType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MaintenanceTypeEnum> MaintenanceType { get; set; }

        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the patch to be applied in the maintenance run.
        /// </value>
        [JsonProperty(PropertyName = "patchId")]
        public string PatchId { get; set; }
        ///
        /// <value>
        /// Maintenance sub-type.
        /// </value>
        ///
        public enum MaintenanceSubtypeEnum {
            [EnumMember(Value = "QUARTERLY")]
            Quarterly,
            [EnumMember(Value = "HARDWARE")]
            Hardware,
            [EnumMember(Value = "CRITICAL")]
            Critical
        };

        /// <value>
        /// Maintenance sub-type.
        /// </value>
        [JsonProperty(PropertyName = "maintenanceSubtype")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MaintenanceSubtypeEnum> MaintenanceSubtype { get; set; }
    }
}
