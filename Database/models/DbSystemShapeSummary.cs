/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// The shape of the DB system. The shape determines resources to allocate to the DB system - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes.
    /// <br/>
    /// To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator.
    /// If you're an administrator who needs to write policies to give users access,
    /// see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).
    /// 
    /// </summary>
    public class DbSystemShapeSummary 
    {
        
        /// <value>
        /// The name of the shape used for the DB system.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <value>
        /// The family of the shape used for the DB system.
        /// </value>
        [JsonProperty(PropertyName = "shapeFamily")]
        public string ShapeFamily { get; set; }

        /// <value>
        /// Deprecated. Use `name` instead of `shape`.
        /// </value>
        [JsonProperty(PropertyName = "shape")]
        public string Shape { get; set; }

        /// <value>
        /// The maximum number of CPU cores that can be enabled on the DB system for this shape.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AvailableCoreCount is required.")]
        [JsonProperty(PropertyName = "availableCoreCount")]
        public System.Nullable<int> AvailableCoreCount { get; set; }

        /// <value>
        /// The minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </value>
        [JsonProperty(PropertyName = "minimumCoreCount")]
        public System.Nullable<int> MinimumCoreCount { get; set; }

        /// <value>
        /// The discrete number by which the CPU core count for this shape can be increased or decreased.
        /// </value>
        [JsonProperty(PropertyName = "coreCountIncrement")]
        public System.Nullable<int> CoreCountIncrement { get; set; }

        /// <value>
        /// The minimum number of CPU cores that can be enabled per node for this shape.
        /// </value>
        [JsonProperty(PropertyName = "minCoreCountPerNode")]
        public System.Nullable<int> MinCoreCountPerNode { get; set; }

        /// <value>
        /// The maximum memory that can be enabled for this shape.
        /// </value>
        [JsonProperty(PropertyName = "availableMemoryInGBs")]
        public System.Nullable<int> AvailableMemoryInGBs { get; set; }

        /// <value>
        /// The minimum memory that need be allocated per node for this shape.
        /// </value>
        [JsonProperty(PropertyName = "minMemoryPerNodeInGBs")]
        public System.Nullable<int> MinMemoryPerNodeInGBs { get; set; }

        /// <value>
        /// The maximum Db Node storage that can be enabled for this shape.
        /// </value>
        [JsonProperty(PropertyName = "availableDbNodeStorageInGBs")]
        public System.Nullable<int> AvailableDbNodeStorageInGBs { get; set; }

        /// <value>
        /// The minimum Db Node storage that need be allocated per node for this shape.
        /// </value>
        [JsonProperty(PropertyName = "minDbNodeStoragePerNodeInGBs")]
        public System.Nullable<int> MinDbNodeStoragePerNodeInGBs { get; set; }

        /// <value>
        /// The maximum DATA storage that can be enabled for this shape.
        /// </value>
        [JsonProperty(PropertyName = "availableDataStorageInTBs")]
        public System.Nullable<int> AvailableDataStorageInTBs { get; set; }

        /// <value>
        /// The minimum data storage that need be allocated for this shape.
        /// </value>
        [JsonProperty(PropertyName = "minDataStorageInTBs")]
        public System.Nullable<int> MinDataStorageInTBs { get; set; }

        /// <value>
        /// The minimum number of database nodes available for this shape.
        /// </value>
        [JsonProperty(PropertyName = "minimumNodeCount")]
        public System.Nullable<int> MinimumNodeCount { get; set; }

        /// <value>
        /// The maximum number of database nodes available for this shape.
        /// </value>
        [JsonProperty(PropertyName = "maximumNodeCount")]
        public System.Nullable<int> MaximumNodeCount { get; set; }
    }
}
