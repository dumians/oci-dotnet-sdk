/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoggingsearchService.Models
{
    /// <summary>
    /// Contains field schema information.
    /// </summary>
    public class FieldInfo 
    {
        
        /// <value>
        /// Field name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FieldName is required.")]
        [JsonProperty(PropertyName = "fieldName")]
        public string FieldName { get; set; }
        ///
        /// <value>
        /// Field type -
        /// * `STRING`: A sequence of characters.
        /// * `NUMBER`: Numeric type which can be integer or floating point.
        /// * `BOOLEAN`: Either true or false.
        /// * `ARRAY`: An ordered collection of values.
        /// 
        /// </value>
        ///
        public enum FieldTypeEnum {
            [EnumMember(Value = "STRING")]
            String,
            [EnumMember(Value = "NUMBER")]
            Number,
            [EnumMember(Value = "BOOLEAN")]
            Boolean,
            [EnumMember(Value = "ARRAY")]
            Array
        };

        /// <value>
        /// Field type -
        /// * `STRING`: A sequence of characters.
        /// * `NUMBER`: Numeric type which can be integer or floating point.
        /// * `BOOLEAN`: Either true or false.
        /// * `ARRAY`: An ordered collection of values.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FieldType is required.")]
        [JsonProperty(PropertyName = "fieldType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<FieldTypeEnum> FieldType { get; set; }
    }
}
