/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;

namespace Oci.CimsService.Models
{

  public enum ErrorCode {
      [EnumMember(Value = "CONTENT_EMPTY")]
      ContentEmpty,
      [EnumMember(Value = "CLIENT_EXCEPTION")]
      ClientException,
      [EnumMember(Value = "INVALID_FORMAT")]
      InvalidFormat,
      [EnumMember(Value = "INVALID_JSON_INPUT")]
      InvalidJsonInput,
      [EnumMember(Value = "SSL_AUTHORIZATION")]
      SslAuthorization,
      [EnumMember(Value = "AUTH_FAILED")]
      AuthFailed,
      [EnumMember(Value = "CSI_NOT_AUTHORIZED")]
      CsiNotAuthorized,
      [EnumMember(Value = "USER_POLICY_NOT_AUTHORIZED")]
      UserPolicyNotAuthorized,
      [EnumMember(Value = "EMAIL_NOT_VERIFIED")]
      EmailNotVerified,
      [EnumMember(Value = "EMAIL_NOT_FOUND")]
      EmailNotFound,
      [EnumMember(Value = "IDCS_EMAIL_NOT_VALID")]
      IdcsEmailNotValid,
      [EnumMember(Value = "INVALID_PATH")]
      InvalidPath,
      [EnumMember(Value = "METHOD_NOT_ALLOWED")]
      MethodNotAllowed,
      [EnumMember(Value = "JSON_PROCESSING")]
      JsonProcessing,
      [EnumMember(Value = "GENERIC_EXCEPTION")]
      GenericException,
      [EnumMember(Value = "EXTERNAL_SERVICE_PROVIDER_UNAVAILABLE")]
      ExternalServiceProviderUnavailable,
      [EnumMember(Value = "EXTERNAL_SERVICE_PROVIDER_TIMEOUT")]
      ExternalServiceProviderTimeout,
      [EnumMember(Value = "TOO_MANY_REQUESTS")]
      TooManyRequests,
      [EnumMember(Value = "IDP_SCIM_NOT_SETUP")]
      IdpScimNotSetup,
      [EnumMember(Value = "INCIDENT_NOT_FOUND")]
      IncidentNotFound,
      [EnumMember(Value = "INVALID_USER_CSI")]
      InvalidUserCsi,
      [EnumMember(Value = "DATA_ALREADY_EXISTS")]
      DataAlreadyExists,
      [EnumMember(Value = "AUTH_USER_NOT_MATCHING")]
      AuthUserNotMatching
  }
}
