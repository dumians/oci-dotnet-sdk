/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CimsService.Models
{
    /// <summary>
    /// Contact details for the customer.
    /// </summary>
    public class Contact 
    {
        
        /// <value>
        /// The name of the contact person.
        /// </value>
        [JsonProperty(PropertyName = "contactName")]
        public string ContactName { get; set; }

        /// <value>
        /// The email of the contact person.
        /// </value>
        [JsonProperty(PropertyName = "contactEmail")]
        public string ContactEmail { get; set; }

        /// <value>
        /// The phone number of the contact person.
        /// </value>
        [JsonProperty(PropertyName = "contactPhone")]
        public string ContactPhone { get; set; }
        ///
        /// <value>
        /// The type of contact, such as primary or alternate.
        /// </value>
        ///
        public enum ContactTypeEnum {
            [EnumMember(Value = "PRIMARY")]
            Primary,
            [EnumMember(Value = "ALTERNATE")]
            Alternate,
            [EnumMember(Value = "SECONDARY")]
            Secondary,
            [EnumMember(Value = "ADMIN")]
            Admin,
            [EnumMember(Value = "MANAGER")]
            Manager
        };

        /// <value>
        /// The type of contact, such as primary or alternate.
        /// </value>
        [JsonProperty(PropertyName = "contactType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ContactTypeEnum> ContactType { get; set; }
    }
}
