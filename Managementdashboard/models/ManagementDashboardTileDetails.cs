/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ManagementdashboardService.Models
{
    /// <summary>
    /// Properties of dashboard tile representing a saved search.
    /// </summary>
    public class ManagementDashboardTileDetails 
    {
        
        /// <value>
        /// Display name for saved search.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <value>
        /// Id of saved search.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SavedSearchId is required.")]
        [JsonProperty(PropertyName = "savedSearchId")]
        public string SavedSearchId { get; set; }

        /// <value>
        /// Row, Y position
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Row is required.")]
        [JsonProperty(PropertyName = "row")]
        public System.Nullable<int> Row { get; set; }

        /// <value>
        /// Column, X position
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Column is required.")]
        [JsonProperty(PropertyName = "column")]
        public System.Nullable<int> Column { get; set; }

        /// <value>
        /// Height position
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Height is required.")]
        [JsonProperty(PropertyName = "height")]
        public System.Nullable<int> Height { get; set; }

        /// <value>
        /// Width position
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Width is required.")]
        [JsonProperty(PropertyName = "width")]
        public System.Nullable<int> Width { get; set; }

        /// <value>
        /// Json for internationalization.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Nls is required.")]
        [JsonProperty(PropertyName = "nls")]
        public System.Object Nls { get; set; }

        /// <value>
        /// Json to contain options for UI.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UiConfig is required.")]
        [JsonProperty(PropertyName = "uiConfig")]
        public System.Object UiConfig { get; set; }

        /// <value>
        /// Array of Json to contain options for source of data.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataConfig is required.")]
        [JsonProperty(PropertyName = "dataConfig")]
        public System.Collections.Generic.List<System.Object> DataConfig { get; set; }
        ///
        /// <value>
        /// State of saved search.
        /// </value>
        ///
        public enum StateEnum {
            [EnumMember(Value = "DELETED")]
            Deleted,
            [EnumMember(Value = "UNAUTHORIZED")]
            Unauthorized,
            [EnumMember(Value = "DEFAULT")]
            Default
        };

        /// <value>
        /// State of saved search.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "State is required.")]
        [JsonProperty(PropertyName = "state")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<StateEnum> State { get; set; }

        /// <value>
        /// Drill down configuration
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DrilldownConfig is required.")]
        [JsonProperty(PropertyName = "drilldownConfig")]
        public System.Object DrilldownConfig { get; set; }
    }
}
