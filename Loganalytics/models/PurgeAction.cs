/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// Purge action for scheduled task.
    /// </summary>
    public class PurgeAction : Action
    {
        
        /// <value>
        /// Purge query string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "QueryString is required.")]
        [JsonProperty(PropertyName = "queryString")]
        public string QueryString { get; set; }

        /// <value>
        /// the type of the log data to be purged
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataType is required.")]
        [JsonProperty(PropertyName = "dataType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<StorageDataType> DataType { get; set; }

        /// <value>
        /// The duration of data to be retained, which is used to
        /// calculate the timeDataEnded when the task fires.
        /// The value should be negative.
        /// Purge duration in ISO 8601 extended format as described in
        /// https://en.wikipedia.org/wiki/ISO_8601#Durations.
        /// The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PurgeDuration is required.")]
        [JsonProperty(PropertyName = "purgeDuration")]
        public string PurgeDuration { get; set; }

        /// <value>
        /// the compartment OCID under which the data will be purged
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PurgeCompartmentId is required.")]
        [JsonProperty(PropertyName = "purgeCompartmentId")]
        public string PurgeCompartmentId { get; set; }

        /// <value>
        /// if true, purge child compartments data
        /// </value>
        [JsonProperty(PropertyName = "compartmentIdInSubtree")]
        public System.Nullable<bool> CompartmentIdInSubtree { get; set; }
    }
}
