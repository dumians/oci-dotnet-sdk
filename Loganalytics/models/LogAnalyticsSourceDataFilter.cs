/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// LogAnalyticsSourceDataFilter
    /// </summary>
    public class LogAnalyticsSourceDataFilter 
    {
        
        /// <value>
        /// description
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <value>
        /// display name
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <value>
        /// edit version
        /// </value>
        [JsonProperty(PropertyName = "editVersion")]
        public System.Nullable<long> EditVersion { get; set; }

        /// <value>
        /// enabled
        /// </value>
        [JsonProperty(PropertyName = "isEnabled")]
        public System.Nullable<bool> IsEnabled { get; set; }

        /// <value>
        /// field internal name
        /// </value>
        [JsonProperty(PropertyName = "fieldName")]
        public string FieldName { get; set; }

        /// <value>
        /// hash type
        /// </value>
        [JsonProperty(PropertyName = "hashType")]
        public System.Nullable<int> HashType { get; set; }

        /// <value>
        /// filter Id
        /// </value>
        [JsonProperty(PropertyName = "dataFilterId")]
        public System.Nullable<long> DataFilterId { get; set; }

        /// <value>
        /// is system flag
        /// </value>
        [JsonProperty(PropertyName = "isSystem")]
        public System.Nullable<bool> IsSystem { get; set; }

        /// <value>
        /// regular expression match
        /// </value>
        [JsonProperty(PropertyName = "matchRegularExpression")]
        public string MatchRegularExpression { get; set; }

        /// <value>
        /// order
        /// </value>
        [JsonProperty(PropertyName = "order")]
        public System.Nullable<long> Order { get; set; }

        /// <value>
        /// path
        /// </value>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <value>
        /// replacement string
        /// </value>
        [JsonProperty(PropertyName = "replacementString")]
        public string ReplacementString { get; set; }

        /// <value>
        /// source Id
        /// </value>
        [JsonProperty(PropertyName = "sourceId")]
        public System.Nullable<long> SourceId { get; set; }
        ///
        /// <value>
        /// filterType
        /// </value>
        ///
        public enum FilterTypeEnum {
            [EnumMember(Value = "MASK")]
            Mask,
            [EnumMember(Value = "HASH_MASK")]
            HashMask,
            [EnumMember(Value = "DROP_LOG_ENTRY")]
            DropLogEntry,
            [EnumMember(Value = "DROP_STRING")]
            DropString
        };

        /// <value>
        /// filterType
        /// </value>
        [JsonProperty(PropertyName = "filterType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<FilterTypeEnum> FilterType { get; set; }
    }
}
