/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// Command descriptor for querylanguage CLUSTERCOMPARE command.
    /// 
    /// </summary>
    public class ClusterCompareCommandDescriptor : AbstractCommandDescriptor
    {
        
        /// <value>
        /// To shift time range of main query backwards using a relative time expression e.g -24hrs. E.g compare against the previous 24 hrs.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeShift")]
        public string TimeShift { get; set; }

        /// <value>
        /// Start time to apply to base line query if specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeStart")]
        public System.Nullable<long> TimeStart { get; set; }

        /// <value>
        /// End time to apply to base line query if specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeEnd")]
        public System.Nullable<long> TimeEnd { get; set; }

        /// <value>
        /// Option to calculate trends of each cluster if specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "shouldIncludeTrends")]
        public System.Nullable<bool> ShouldIncludeTrends { get; set; }

        /// <value>
        /// Option to control the size of buckets in the histogram e.g 8hrs  - each bar other than first and last should represent 8hr time span. Will be adjusted to a larger span if time range is very large.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "span")]
        public string Span { get; set; }

        /// <value>
        /// Query to use to compute base line to compare top level query results against to identify differences if specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "baselineQuery")]
        public string BaselineQuery { get; set; }
    }
}
